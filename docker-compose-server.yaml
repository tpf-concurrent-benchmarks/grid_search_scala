version: "3.7"

services:
  graphite:
    image: graphiteapp/graphite-statsd:latest
    volumes:
      - "./statsd.config.js:/opt/statsd/config/udp.js:ro"
      - "./statsd.config.js:/opt/statsd/config/tcp.js:ro"
      - "./graphite.carbon.conf:/opt/graphite/conf/carbon.conf:ro"
      - "./graphite.storage-schemas.conf:/opt/graphite/conf/storage-schemas.conf:ro"
      - "./graphite:/opt/graphite/storage/:rw"
    ports:
      - "8080:8080"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    command: >
      -storage_driver="statsd"
      -storage_driver_host="graphite:8125"
      -storage_driver_db="cadvisor"
      -storage_driver_buffer_duration="1m0s"
      --enable_metrics=cpu,cpuLoad,disk,diskIO,memory,network
    depends_on:
      - graphite
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "8081:3000"
    volumes:
      - "grafana_config:/var/lib/grafana"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
    depends_on:
      - graphite

  renderer:
    image: grafana/grafana-image-renderer:latest
    ports:
      - "8082:8081"

  rabbitmq:
    image: rostov_rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 50s
    volumes:
      - type: bind
        source: ./containers/rabbitmq/definitions.json
        target: /definitions.json
        read_only: true
    ports:
      - "15672:15672"

  worker:
    image: grid_search_scala_worker
    tty: true
    stdin_open: true
    depends_on:
      - rabbitmq
      - graphite
    deploy:
      replicas: 4
      restart_policy:
        condition: none
    environment:
      - LOCAL=${LOCAL}
      - NODE_ID=worker_{{.Task.Slot}}

  manager:
    image: grid_search_scala_manager
    depends_on:
      - rabbitmq
      - graphite
    deploy:
      restart_policy:
        condition: none
    environment:
      - LOCAL=${LOCAL}
      - NODE_ID=manager

volumes:
  grafana_config:
    external: true
